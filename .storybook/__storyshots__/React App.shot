exports[`App`] = `
<div
  style={
    Object {
      "background": "#ffffff",
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }>
  <div
    className="SplitPane  vertical "
    style={
      Object {
        "MozUserSelect": "text",
        "WebkitUserSelect": "text",
        "display": "flex",
        "flex": 1,
        "flexDirection": "row",
        "height": "100%",
        "left": 0,
        "msUserSelect": "text",
        "outline": "none",
        "overflow": "hidden",
        "position": "absolute",
        "right": 0,
        "userSelect": "text",
      }
    }>
    <div
      className="Pane vertical Pane1"
      style={
        Object {
          "flex": 1,
          "outline": "none",
          "overflowX": "auto",
          "overflowY": "auto",
          "position": "relative",
        }
      }>
      <div>
        <div
          style={
            Object {
              "display": "flex",
              "justifyContent": "center",
            }
          }>
          <div
            style={
              Object {
                "minWidth": 200,
                "width": "100%",
              }
            }>
            <div
              className="App">
              <div
                className="App App-header"
                style={
                  Object {
                    "backgroundColor": "#212121",
                  }
                }>
                <img
                  alt="logo"
                  className="App-logo"
                  src="E:\\DevelopWeb\\_CompFactory\\_Develop\\react-theming\\src\\logo.svg" />
                <h2
                  style={
                    Object {
                      "color": "#ffffff",
                    }
                  }>
                  Welcome to React-Theming
                </h2>
                <h3
                  style={
                    Object {
                      "color": "rgba(255, 255, 255, 0.54)",
                    }
                  }>
                  Boilerplate Project
                </h3>
              </div>
              <div
                className="App-intro"
                style={
                  Object {
                    "margin": "0 auto",
                    "maxWidth": 1000,
                  }
                }>
                <div
                  className="react-theme-provider">
                  <link
                    href="data:text/css,
                  .react-theme-provider div {
                      color: rgba(0,0,0,0.87);
                      /*color: red;*/
                      background-color: #ffffff;
                      border-width: 1px;
                      border-color: #bdbdbd;
                      font-family: Roboto, sans-serif;
                      font-size: 12px;
                  }
                  
                  .react-theme-provider h1 {
                      font-size: 18px;
                      font-weight: 800;
                      opacity: 0.8;
                  }
                  
                  .react-theme-provider h2 {
                      font-size: 16px;
                  }
                  
                  .react-theme-provider code {
                      background: #f5f5f5;
                      border-color: #bdbdbd;
                  }
                  
                  .react-theme-provider a {
                      color: #00bcd4;
                  }
                  
                  .react-theme-provider span {
                      color: #ff4081;
                  }
                  
                  .react-theme-provider ::selection {
                      background: #b2ebf2;
                  }
                  .react-theme-provider a::selection {
                      color: #0097a7;
                      background: #b2ebf2;
                  }
                  "
                    rel="stylesheet"
                    type="text/css" />
                  <div>
                    <h1>
                      Quick start
                    </h1>
                    <p>
                      At the heart of this project the desire to collect the best practices of application development via 
                      <a
                        href="https://github.com/storybooks/react-storybook">
                        React-Storybook
                      </a>
                      environment. This project is transparent and friendly for developers. You do not need to eject anything. Therefore you can easily add your own configuration and extend it using any packages.
                    </p>
                    <p>
                      It contains the 
                      <span>
                        fully-charged
                      </span>
                       setup of the Storybook with pre-installed 
                      <span>
                        plugins
                      </span>
                      , configuration, quick examples, and tips.
                    </p>
                    <h2>
                      Instal the project
                    </h2>
                    <code>
                      git clone https://github.com/sm-react/react-theming.git
                      <br />
                      cd react-theming
                      <br />
                      npm i
                      <br />
                      npm start
                      <br />
                    </code>
                    <p>
                      Press 
                      <code>
                        Ctrl-Shft-F
                      </code>
                       to exit from 
                      <code>
                        Full screen
                      </code>
                       mode
                    </p>
                    <p>
                      Let\'s select another theme for this page. Do it via dropdown list at the bottom panel. Out of the box there are three themes: \'Light\', \'Dark\' and \'Gray\'. Check out them.
                    </p>
                    <p>
                      Okay, now let\'s look at the panel on the left. In fact, our application consists of two components:
                      <code>
                        src/Header.jsx
                      </code>
                       and 
                      <code>
                        src/Intro.jsx
                      </code>
                      . Selecting the appropriate items in the left-side list you switch to an isolated view of the component. It\'s how 
                      <span>
                        React Storybook
                      </span>
                      works - allows you \'step-by-step\' to create and works with React components. You can improve the quality of development by applying different addons to Storybook. Most of them is already pre-installed in this project. You will find excellent 
                      <a
                        href="https://getstorybook.io/docs/">
                        documentation and examples
                      </a>
                       on the React Storybook website.
                    </p>
                    <p>
                      A short guide for other Storybook Addons will be here...
                    </p>
                    <h2>
                      ThemeProvider:
                    </h2>
                    <code>
                      <ThemeProvider>
                      <br />
                        
                      <YourThemedComponentOrPlainHTML />
                      <br />
                      </ThemeProvider>
                    </code>
                    <p>
                      A generic theme provider and (very) simple CSS styler
                    </p>
                    <h2>
                      What is Theme?
                    </h2>
                    <p>
                      It\'s just plain javascript object, typically with two levels of nesting.
                    </p>
                    <p>
                      Primer:
                    </p>
                    <code>
                      const greyTheme = {
                      <br />
                        themeName: \'Grey Theme\',
                      <br />
                        themeFile: \'greyTheme.json\',
                      <br />
                        palette: {
                      <br />
                          primary1Color: \'#00bcd4\',
                      <br />
                          alternateTextColor: \'#4a4a4a\',
                      <br />
                          canvasColor: \'#616161\',
                      <br />
                          textColor: \'#bdbdbd\',
                      <br />
                          secondaryTextColor: \'rgba(255, 255, 255, 0.54)\',
                      <br />
                          disabledColor: \'#757575\',
                      <br />
                          accent1Color: \'#607d8b\',
                      <br />
                        },
                      <br />
                      };
                      <br />
                    </code>
                    <h2>
                      What is CSSrule?
                    </h2>
                    <p>
                      a string containing CSS rules. Typically it\'s a template string with passed theme props:
                    </p>
                    <code>
                      .themed div {
                      <br />
                        color: ${palette.textColor};
                      <br />
                        background-color: ${palette.canvasColor};
                      <br />
                      }
                      <br />
                      <br />
                      .themed a {
                      <br />
                        color: ${palette.primary1Color};
                      <br />
                      }
                      <br />
                    </code>
                    <p>
                      if you use it without any props 
                      <span>
                        inside
                      </span>
                       the 
                      <span>
                        MuiThemeProvider
                      </span>
                      , it will provide CSS style for your html elements based on the current theme
                    </p>
                    <p>
                      if you use it without any props 
                      <span>
                        outside
                      </span>
                       the 
                      <span>
                        MuiThemeProvider
                      </span>
                      , it will provide CSS style for your html elements based on the default theme and pass this theme to your components via context same way as MuiThemeProvider.
                    </p>
                    <p>
                      See project\'s 
                      <a
                        href="https://github.com/sm-react/react-theme-provider">
                        repo
                      </a>
                    </p>
                    <br />
                    <br />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <span
      className="Resizer vertical "
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "display": "none",
        }
      } />
    <div
      className="Pane vertical Pane2"
      style={
        Object {
          "flex": "none",
          "outline": "none",
          "position": "relative",
          "width": 0,
        }
      }>
      <div
        className="sb-addon-material-ui-theme_sidebar"
        style={
          Object {
            "height": "100%",
            "width": "100%",
          }
        } />
    </div>
  </div>
</div>
`;

exports[`App-header`] = `
<div
  style={
    Object {
      "background": "#ffffff",
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }>
  <div
    className="SplitPane  vertical "
    style={
      Object {
        "MozUserSelect": "text",
        "WebkitUserSelect": "text",
        "display": "flex",
        "flex": 1,
        "flexDirection": "row",
        "height": "100%",
        "left": 0,
        "msUserSelect": "text",
        "outline": "none",
        "overflow": "hidden",
        "position": "absolute",
        "right": 0,
        "userSelect": "text",
      }
    }>
    <div
      className="Pane vertical Pane1"
      style={
        Object {
          "flex": 1,
          "outline": "none",
          "overflowX": "auto",
          "overflowY": "auto",
          "position": "relative",
        }
      }>
      <div>
        <div
          style={
            Object {
              "display": "flex",
              "justifyContent": "center",
            }
          }>
          <div
            style={
              Object {
                "minWidth": 200,
                "width": "100%",
              }
            }>
            <div
              className="App App-header"
              style={
                Object {
                  "backgroundColor": "#212121",
                }
              }>
              <img
                alt="logo"
                className="App-logo"
                src="E:\\DevelopWeb\\_CompFactory\\_Develop\\react-theming\\src\\logo.svg" />
              <h2
                style={
                  Object {
                    "color": "#ffffff",
                  }
                }>
                Welcome to React-Theming
              </h2>
              <h3
                style={
                  Object {
                    "color": "rgba(255, 255, 255, 0.54)",
                  }
                }>
                Boilerplate Project
              </h3>
            </div>
          </div>
        </div>
      </div>
    </div>
    <span
      className="Resizer vertical "
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "display": "none",
        }
      } />
    <div
      className="Pane vertical Pane2"
      style={
        Object {
          "flex": "none",
          "outline": "none",
          "position": "relative",
          "width": 0,
        }
      }>
      <div
        className="sb-addon-material-ui-theme_sidebar"
        style={
          Object {
            "height": "100%",
            "width": "100%",
          }
        } />
    </div>
  </div>
</div>
`;

exports[`App-intro`] = `
<div
  style={
    Object {
      "background": "#ffffff",
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }>
  <div
    className="SplitPane  vertical "
    style={
      Object {
        "MozUserSelect": "text",
        "WebkitUserSelect": "text",
        "display": "flex",
        "flex": 1,
        "flexDirection": "row",
        "height": "100%",
        "left": 0,
        "msUserSelect": "text",
        "outline": "none",
        "overflow": "hidden",
        "position": "absolute",
        "right": 0,
        "userSelect": "text",
      }
    }>
    <div
      className="Pane vertical Pane1"
      style={
        Object {
          "flex": 1,
          "outline": "none",
          "overflowX": "auto",
          "overflowY": "auto",
          "position": "relative",
        }
      }>
      <div>
        <div
          style={
            Object {
              "display": "flex",
              "justifyContent": "center",
            }
          }>
          <div
            style={
              Object {
                "minWidth": 200,
                "width": "100%",
              }
            }>
            <div
              className="App-intro"
              style={
                Object {
                  "margin": "0 auto",
                  "maxWidth": 1000,
                }
              }>
              <div
                className="react-theme-provider">
                <link
                  href="data:text/css,
                .react-theme-provider div {
                    color: rgba(0,0,0,0.87);
                    /*color: red;*/
                    background-color: #ffffff;
                    border-width: 1px;
                    border-color: #bdbdbd;
                    font-family: Roboto, sans-serif;
                    font-size: 12px;
                }
                
                .react-theme-provider h1 {
                    font-size: 18px;
                    font-weight: 800;
                    opacity: 0.8;
                }
                
                .react-theme-provider h2 {
                    font-size: 16px;
                }
                
                .react-theme-provider code {
                    background: #f5f5f5;
                    border-color: #bdbdbd;
                }
                
                .react-theme-provider a {
                    color: #00bcd4;
                }
                
                .react-theme-provider span {
                    color: #ff4081;
                }
                
                .react-theme-provider ::selection {
                    background: #b2ebf2;
                }
                .react-theme-provider a::selection {
                    color: #0097a7;
                    background: #b2ebf2;
                }
                "
                  rel="stylesheet"
                  type="text/css" />
                <div>
                  <h1>
                    Quick start
                  </h1>
                  <p>
                    At the heart of this project the desire to collect the best practices of application development via 
                    <a
                      href="https://github.com/storybooks/react-storybook">
                      React-Storybook
                    </a>
                    environment. This project is transparent and friendly for developers. You do not need to eject anything. Therefore you can easily add your own configuration and extend it using any packages.
                  </p>
                  <p>
                    It contains the 
                    <span>
                      fully-charged
                    </span>
                     setup of the Storybook with pre-installed 
                    <span>
                      plugins
                    </span>
                    , configuration, quick examples, and tips.
                  </p>
                  <h2>
                    Instal the project
                  </h2>
                  <code>
                    git clone https://github.com/sm-react/react-theming.git
                    <br />
                    cd react-theming
                    <br />
                    npm i
                    <br />
                    npm start
                    <br />
                  </code>
                  <p>
                    Press 
                    <code>
                      Ctrl-Shft-F
                    </code>
                     to exit from 
                    <code>
                      Full screen
                    </code>
                     mode
                  </p>
                  <p>
                    Let\'s select another theme for this page. Do it via dropdown list at the bottom panel. Out of the box there are three themes: \'Light\', \'Dark\' and \'Gray\'. Check out them.
                  </p>
                  <p>
                    Okay, now let\'s look at the panel on the left. In fact, our application consists of two components:
                    <code>
                      src/Header.jsx
                    </code>
                     and 
                    <code>
                      src/Intro.jsx
                    </code>
                    . Selecting the appropriate items in the left-side list you switch to an isolated view of the component. It\'s how 
                    <span>
                      React Storybook
                    </span>
                    works - allows you \'step-by-step\' to create and works with React components. You can improve the quality of development by applying different addons to Storybook. Most of them is already pre-installed in this project. You will find excellent 
                    <a
                      href="https://getstorybook.io/docs/">
                      documentation and examples
                    </a>
                     on the React Storybook website.
                  </p>
                  <p>
                    A short guide for other Storybook Addons will be here...
                  </p>
                  <h2>
                    ThemeProvider:
                  </h2>
                  <code>
                    <ThemeProvider>
                    <br />
                      
                    <YourThemedComponentOrPlainHTML />
                    <br />
                    </ThemeProvider>
                  </code>
                  <p>
                    A generic theme provider and (very) simple CSS styler
                  </p>
                  <h2>
                    What is Theme?
                  </h2>
                  <p>
                    It\'s just plain javascript object, typically with two levels of nesting.
                  </p>
                  <p>
                    Primer:
                  </p>
                  <code>
                    const greyTheme = {
                    <br />
                      themeName: \'Grey Theme\',
                    <br />
                      themeFile: \'greyTheme.json\',
                    <br />
                      palette: {
                    <br />
                        primary1Color: \'#00bcd4\',
                    <br />
                        alternateTextColor: \'#4a4a4a\',
                    <br />
                        canvasColor: \'#616161\',
                    <br />
                        textColor: \'#bdbdbd\',
                    <br />
                        secondaryTextColor: \'rgba(255, 255, 255, 0.54)\',
                    <br />
                        disabledColor: \'#757575\',
                    <br />
                        accent1Color: \'#607d8b\',
                    <br />
                      },
                    <br />
                    };
                    <br />
                  </code>
                  <h2>
                    What is CSSrule?
                  </h2>
                  <p>
                    a string containing CSS rules. Typically it\'s a template string with passed theme props:
                  </p>
                  <code>
                    .themed div {
                    <br />
                      color: ${palette.textColor};
                    <br />
                      background-color: ${palette.canvasColor};
                    <br />
                    }
                    <br />
                    <br />
                    .themed a {
                    <br />
                      color: ${palette.primary1Color};
                    <br />
                    }
                    <br />
                  </code>
                  <p>
                    if you use it without any props 
                    <span>
                      inside
                    </span>
                     the 
                    <span>
                      MuiThemeProvider
                    </span>
                    , it will provide CSS style for your html elements based on the current theme
                  </p>
                  <p>
                    if you use it without any props 
                    <span>
                      outside
                    </span>
                     the 
                    <span>
                      MuiThemeProvider
                    </span>
                    , it will provide CSS style for your html elements based on the default theme and pass this theme to your components via context same way as MuiThemeProvider.
                  </p>
                  <p>
                    See project\'s 
                    <a
                      href="https://github.com/sm-react/react-theme-provider">
                      repo
                    </a>
                  </p>
                  <br />
                  <br />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <span
      className="Resizer vertical "
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "display": "none",
        }
      } />
    <div
      className="Pane vertical Pane2"
      style={
        Object {
          "flex": "none",
          "outline": "none",
          "position": "relative",
          "width": 0,
        }
      }>
      <div
        className="sb-addon-material-ui-theme_sidebar"
        style={
          Object {
            "height": "100%",
            "width": "100%",
          }
        } />
    </div>
  </div>
</div>
`;
