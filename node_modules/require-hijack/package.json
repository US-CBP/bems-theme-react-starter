{
  "_args": [
    [
      {
        "raw": "require-hijack@^1.2.1",
        "scope": null,
        "escapedName": "require-hijack",
        "name": "require-hijack",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\BBH87K4\\Desktop\\bkahl\\GIT\\cbp-theme-react-starter\\node_modules\\@kadira\\storyshots"
    ]
  ],
  "_from": "require-hijack@>=1.2.1 <2.0.0",
  "_id": "require-hijack@1.2.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/require-hijack",
  "_npmUser": {
    "name": "adam.terlson",
    "email": "adam.terlson@gmail.com"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "require-hijack@^1.2.1",
    "scope": null,
    "escapedName": "require-hijack",
    "name": "require-hijack",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@kadira/storyshots"
  ],
  "_resolved": "https://registry.npmjs.org/require-hijack/-/require-hijack-1.2.1.tgz",
  "_shasum": "ccdbf8391870b1806722b086e6cc1ab26a44f15f",
  "_shrinkwrap": null,
  "_spec": "require-hijack@^1.2.1",
  "_where": "C:\\Users\\BBH87K4\\Desktop\\bkahl\\GIT\\cbp-theme-react-starter\\node_modules\\@kadira\\storyshots",
  "author": {
    "name": "Adam Terlson"
  },
  "bugs": {
    "url": "https://github.com/adamterlson/require-hijack/issues"
  },
  "dependencies": {
    "require-middleware": "~1.0.0"
  },
  "description": "Hijack node require calls, with support for hijacking the entire module itself rather than only its properties.  Handy for unit testing and mocking require calls in sub modules!",
  "devDependencies": {
    "chai": "~1.8.0",
    "istanbul": "~0.1.44",
    "mocha": "~1.13.0",
    "sinon": "~1.7.3",
    "sinon-chai": "~2.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ccdbf8391870b1806722b086e6cc1ab26a44f15f",
    "tarball": "https://registry.npmjs.org/require-hijack/-/require-hijack-1.2.1.tgz"
  },
  "gitHead": "57eb107e050826800d58edcdbf041afce4fa717a",
  "homepage": "https://github.com/adamterlson/require-hijack#readme",
  "keywords": [
    "node",
    "require",
    "mock",
    "inject",
    "unit",
    "test"
  ],
  "license": "BSD",
  "main": "index.js",
  "maintainers": [
    {
      "name": "adam.terlson",
      "email": "adam.terlson@gmail.com"
    }
  ],
  "name": "require-hijack",
  "optionalDependencies": {},
  "readme": "Require Hijack\n============\n\nThis library enables mocking require calls.  This is particularly useful when unit testing a module that depends on another sub-module.\n\n## How it differs:\n\n* It allows for mocking of the **ENTIRE** module (meaning a Class's constructor can be replaced, or if the module is nothing more than a function the entire function can be replaced).\n* It works without touching the require cache, so it will work on native modules as well (such as fs).\n* Doesn't spawn a vm.\n* This module itself doesn't touch the inside of require, though it leverages [require-middleware](https://github.com/adamterlson/require-middleware) which redefines what `require` means.\n\n## Basic usage\n\n```````javascript\n// This call to the real dependency is only required to quickly stub out the entire thing.\n// You can pass any sort of object or function to `with()`\nvar realfs = require('fs');\n\n// From this point on out, all require calls will go through the mocker\nvar requireHijack = require('require-hijack');\n\nvar fakeFs = sinon.stub(fs);\nvar replacement = requireHijack.replace('fs').with(fakeFs);\n\nvar myModule = require('../lib/myModule');\nmyModule.readDirectory();\n\nfakeFs.readdir.should.have.been.called;\n```````\n\n*Note* - Hijack your sub-module's dependencies **before** loading your sub-module, otherwise those require calls will happen prior to the hijacking goodness!\n\n### Paths\n\nPaths used are relative to the module doing the hijacking and not the module doing the requiring, in this way it can be referenced just like require and totally unambiguously.\n\nIn `/test/test.js`:\n````````javascript\nvar requireHijack = require('require-hijack');\nvar fake = {};\n// Paths passed work just like those to require, relative to the caller\nrequireHijack.replace('./fixtures/bar').with(fake);\n\n// foo requires bar\nrequire('./fixtures/foo');\n``````````````````\n\nIn `/test/fixtures/foo.js`:\n````````javascript\nrequire('./bar') // Will yield the fake\n``````````````````\n\n## Restoring individual replacements\n\n````````javascript\nvar newModule = {};\nvar replacement = requireHijack.replace('some-module').with(newModule);\n\n//restore\nreplacement.restore();\n\nrequire('some-module'); // Gets the real module\n``````````````````\n\n## Restoring all replacements\n\n````````javascript\nrequireHijack.restoreAll();\n``````````````````\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adamterlson/require-hijack.git"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha --reporter spec --recursive --ui bdd",
    "test-coverage": "./node_modules/istanbul/lib/cli.js cover -- ./node_modules/mocha/bin/_mocha --reporter spec --recursive --ui bdd"
  },
  "version": "1.2.1"
}
